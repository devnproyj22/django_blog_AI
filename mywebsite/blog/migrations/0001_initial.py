# Generated by Django 5.1 on 2024-09-01 19:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=100, verbose_name='카테고리명')),
                ('slug', models.SlugField(unique=True, verbose_name='슬러그')),
            ],
            options={
                'verbose_name': '카테고리',
                'verbose_name_plural': '카테고리들',
            },
        ),
        migrations.CreateModel(
            name='SportMilestone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('milestone_id', models.AutoField(primary_key=True, serialize=False, verbose_name='중간 목표 ID')),
                ('sport_milestone', models.CharField(choices=[('RECORD_IMPROVEMENT', '기록단축'), ('REPETITIONS_INCREASE', '반복 횟수 증가'), ('DISTANCE_EXTENSION', '거리연장'), ('SKILL_IMPROVEMENT', '기술 향상'), ('CONSISTENCY', '일정 유지'), ('STAMINA_IMPROVEMENT', '체력 증진'), ('CALORIE_BURN', '칼로리 소모'), ('FLEXIBILITY_IMPROVEMENT', '유연성 향상')], max_length=100, verbose_name='중간 목표')),
            ],
            options={
                'verbose_name': '운동 중간 목표',
                'verbose_name_plural': '운동 중간 목표들',
            },
        ),
        migrations.CreateModel(
            name='SportType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('sport_id', models.AutoField(primary_key=True, serialize=False, verbose_name='운동 종목 ID')),
                ('sport_type', models.CharField(choices=[('GOLF', '골프'), ('TENNIS', '테니스'), ('PILATES', '필라테스'), ('JOGGING', '조깅'), ('HIKING', '등산'), ('SWIMMING', '수영')], max_length=100, unique=True, verbose_name='운동 종목')),
            ],
            options={
                'verbose_name': '운동 종목',
                'verbose_name_plural': '운동 종목들',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='태그명')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='슬러그')),
            ],
            options={
                'verbose_name': '태그',
                'verbose_name_plural': '태그들',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('post_id', models.AutoField(primary_key=True, serialize=False, verbose_name='게시글 ID')),
                ('post_title', models.CharField(max_length=100, verbose_name='제목')),
                ('post_content', models.TextField(verbose_name='내용')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category', verbose_name='카테고리')),
                ('post_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('post_sport_milestone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.sportmilestone', verbose_name='운동 목표')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('comment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='댓글 ID')),
                ('comment_content', models.TextField(verbose_name='내용')),
                ('comment_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='부모 댓글')),
                ('comment_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to='blog.post', verbose_name='게시글')),
            ],
            options={
                'verbose_name': '댓글',
                'verbose_name_plural': '댓글들',
            },
        ),
        migrations.CreateModel(
            name='SportSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('session_id', models.AutoField(primary_key=True, serialize=False, verbose_name='세션 ID')),
                ('exercise_video', models.FileField(blank=True, null=True, upload_to='video/', verbose_name='운동 영상')),
                ('exercise_at', models.DateTimeField(verbose_name='운동 시간')),
                ('exercise_loc', models.CharField(max_length=100, verbose_name='운동 장소')),
                ('exercise_dur', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='운동 시간(분)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sport_sessions', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '운동 세션',
                'verbose_name_plural': '운동 세션들',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='post_session',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blog.sportsession', verbose_name='운동 세션'),
        ),
        migrations.AddField(
            model_name='sportmilestone',
            name='sport_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sport_milestones', to='blog.sporttype', verbose_name='운동 종목'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_sport_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.sporttype', verbose_name='운동 종목'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', to='blog.tag', verbose_name='태그'),
        ),
        migrations.CreateModel(
            name='MilestoneProgress',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('m_progress_id', models.AutoField(primary_key=True, serialize=False, verbose_name='진행 ID')),
                ('post_count', models.PositiveSmallIntegerField(default=0, verbose_name='게시글 수')),
                ('pg_sport_milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestone_progress', to='blog.sportmilestone', verbose_name='운동 목표')),
                ('pg_sport_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sport_progress', to='blog.sporttype', verbose_name='운동 종목')),
            ],
            options={
                'verbose_name': '목표 진행',
                'verbose_name_plural': '목표 진행들',
                'unique_together': {('pg_sport_type', 'pg_sport_milestone')},
            },
        ),
    ]
